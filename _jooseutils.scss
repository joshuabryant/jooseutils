
// ===
// USER INTERACTION


// User Select
@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
}




// ===
// LAYOUT


// Breakpoints
@mixin bp($value, $prop : max-width) {
  @media only screen and (#{$prop}: $value) {
    @content;
  }
}


// Position
@mixin position($top: "null", $right: "null", $bottom: $top, $left: $right, $position: absolute, $zIndex: "null") {
  position: $position;

  @if $top != "null" { top: $top; }
  @if $right != "null" { right: $right; }
  @if $bottom != "null" { bottom: $bottom; }
  @if $left != "null" { left: $left; }

  @if $zIndex != "null" { z-index: $zIndex; }
}


// Dimensions
@mixin dimensions($width, $height) {
  height: $height;
  width: $width;
}


// Clearfix ("traditional" pseudo-element clear)
@mixin cfafter {
  &:after {
    clear: both;
    content: " ";
    display: block;
  }
}




// ===
// ANIMATION


// Keyframes mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}


// Animation
@mixin animation($name: fadeIn, $duration: 1s, $delay: .2s, $function: ease, $mode: both) {
  @include experimental(animation, $name $duration $delay $function $mode);
}




// ===
// TYPOGRAPHY


// em's Calculator
@function em($value, $base: 16) {
  @return ($value / $base) * 1em;
}


// Caps
@mixin caps($spaces: 1, $fontsize: 16) {
  letter-spacing: (1em * $spaces / $fontsize);
  text-transform: uppercase;
}


// Visually Hidden
@mixin visuallyhidden() {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}



